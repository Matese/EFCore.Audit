// <auto-generated />
using System;
using EFCore.Audit.IntegrationTest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCore.Audit.IntegrationTest.MySql.Migrations.Migrations
{
    [DbContext(typeof(PersonDbContext))]
    partial class PersonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("EFCore.Audit.AuditEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AuditMetaDataHashPrimaryKey")
                        .HasColumnType("char(36)");

                    b.Property<string>("AuditMetaDataSchemaTable")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ByUser")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("DateTimeOffset")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EntityState")
                        .HasColumnType("int");

                    b.Property<string>("NewValues")
                        .HasColumnType("longtext");

                    b.Property<string>("OldValues")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AuditMetaDataHashPrimaryKey", "AuditMetaDataSchemaTable");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("EFCore.Audit.AuditMetaDataEntity", b =>
                {
                    b.Property<Guid>("HashPrimaryKey")
                        .HasColumnType("char(36)");

                    b.Property<string>("SchemaTable")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("ReadablePrimaryKey")
                        .HasColumnType("longtext");

                    b.Property<string>("Schema")
                        .HasColumnType("longtext");

                    b.Property<string>("Table")
                        .HasColumnType("longtext");

                    b.HasKey("HashPrimaryKey", "SchemaTable");

                    b.ToTable("AuditMetaDatas");
                });

            modelBuilder.Entity("EFCore.Audit.TestCommon.AddressEntity", b =>
                {
                    b.Property<Guid>("PersonId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("longtext");

                    b.HasKey("PersonId", "Type");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("EFCore.Audit.TestCommon.PersonAttributesEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("Attribute")
                        .HasColumnType("int");

                    b.Property<string>("AttributeValue")
                        .HasColumnType("longtext");

                    b.Property<string>("DummyString")
                        .HasColumnType("longtext");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonAttributes");
                });

            modelBuilder.Entity("EFCore.Audit.TestCommon.PersonEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("EFCore.Audit.AuditEntity", b =>
                {
                    b.HasOne("EFCore.Audit.AuditMetaDataEntity", "AuditMetaData")
                        .WithMany("AuditChanges")
                        .HasForeignKey("AuditMetaDataHashPrimaryKey", "AuditMetaDataSchemaTable");

                    b.Navigation("AuditMetaData");
                });

            modelBuilder.Entity("EFCore.Audit.TestCommon.AddressEntity", b =>
                {
                    b.HasOne("EFCore.Audit.TestCommon.PersonEntity", "Person")
                        .WithMany("Addresses")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("EFCore.Audit.TestCommon.PersonAttributesEntity", b =>
                {
                    b.HasOne("EFCore.Audit.TestCommon.PersonEntity", "Person")
                        .WithMany("Attributes")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("EFCore.Audit.AuditMetaDataEntity", b =>
                {
                    b.Navigation("AuditChanges");
                });

            modelBuilder.Entity("EFCore.Audit.TestCommon.PersonEntity", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Attributes");
                });
#pragma warning restore 612, 618
        }
    }
}
